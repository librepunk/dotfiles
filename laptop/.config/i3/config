# vim:filetype=i3
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $st st -t "Suckless Terminal" -f "Inconsolata-dz:size=8"

# Reset Keymap
#exec --no-startup-id setxkbmap -option
# Keymap Mods
exec_always --no-startup-id \
setxkbmap -option \
caps:swapescape,\
shift:both_capslock_cancel,\
altwin:swap_alt_win,\
numpad:microsoft,\
terminate:ctrl_alt_bksp

#exec_always --no-startup-id \
#setxkbmap -option \
#caps:swapescape,\
#shift:both_capslock_cancel,\
#altwin:swap_alt_win,\
#terminate:ctrl_alt_bksp

exec --no-startup-id redshift -l 34.38:-118.1437
exec_always --no-startup-id xcape -e Caps_Lock=Escape
exec --no-startup-id xrandr --dpi 166
exec --no-startup-id numlockx on
exec --no-startup-id sudo ntpd -s
exec --no-startup-id i3-battery-popup -L 40 -l 20 -n
for_window [title="Battery Warning"] sticky enable

## Mouse Bindings optimized for elecom
# $mod + Mouse 3 closes window
bindsym $mod+button12 kill
# Scroll Wheel to change focus
bindsym --whole-window $mod+button6 focus left
bindsym --whole-window $mod+button5 focus down
bindsym --whole-window $mod+button4 focus up
bindsym --whole-window $mod+button7 focus right

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Ubuntu Mono 10

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

## Startup Commands
# Set random background at startup
exec_always --no-startup-id feh --bg-fill /home/nikd/Images/shodan_ascii_by_lomoco.png
#exec --no-startup-id compton -b

## Scratchpad -- Portable Editor Window
# Make current window a scratchpad
bindsym $mod+Shift+slash move scratchpad
# Show the scratchpad
bindsym $mod+slash scratchpad show

# Gaps Borders and other useless ricing crap
for_window [class="^.*"] border pixel 1

#gaps inner 10
#gaps outer 0

smart_gaps on
smart_borders on

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Vim style markin
show_marks yes

# Start more windows floating.
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
# Disable Touchpad and hide pointer
bindsym $mod+t  exec --no-startup-id synclient TouchpadOff=1 && exec unclutter -idle 1 -root -grab
bindsym $mod+Shift+t exec --no-startup-id synclient TouchpadOff=0 && exec pkill unclutter

# start a terminal
#bindsym $mod+Return exec termite -d $(xcwd)
#bindsym $mod+Return exec st -t "Suckless Terminal" -f "Inconsolata-dz:size=8"
bindsym $mod+Return exec $st
bindsym Mod1+0 exec urxvt
bindsym Mod1+9 exec termite

# Launch ranger (file explorer)
bindsym $mod+Shift+Return exec $st -e ranger $(xcwd)

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+semicolon exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

## Start rofi (a better program launcher)
# launch rofi run (run any program)
#bindsym $mod+d exec rofi -modi run -show run -location 2
## launch rofi drun (run programs with explicit desktop files)
#bindsym $mod+shift+d exec rofi -modi drun -show drun -location 2
## launch rofi window (switch windows)
#bindsym $mod+Shift+semicolon exec rofi -modi window -show window -location 2

## Dmenu Bindings
# Normal launch
bindsym $mod+d exec yegonesh -- -fn \
"UbuntuMono-8:normal" -b -i -nb black \
-nf orange -sb black -p ">"
# Desktop Run
bindsym $mod+Shift+d exec j4-dmenu-desktop \
--dmenu='dmenu -fn "UbuntuMono-8:normal" \
-b -i -nb black -nf orange -sb black -p ">"' \
--term='termite'

# Start pulsemixer (ncurses pulseaudio mixer)
bindsym $mod+m exec termite -e pulsemixer
#bindsym $mod+m exec termite -e ncpmixer

# Fuck the mouse
focus_follows_mouse no

# Vimperator style window focus hints
bindsym $mod+semicolon exec exec i3-easyfocus

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Control+h move left 70 px
bindsym $mod+Control+j move down 70 px
bindsym $mod+Control+k move up 70 px
bindsym $mod+Control+l move right  70 px


# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation (or "Up Direction" if you will)
bindsym $mod+u split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Stick that window in place -- I.E. pin window
bindsym $mod+Shift+o sticky toggle


# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# Navigate workspaces next / previous
bindsym $mod+n workspace next
bindsym $mod+p workspace prev

# Move focused next / previous
bindsym Mod1+Shift+x move container to workspace prev
bindsym Mod1+Shift+z move container to workspace next

# move focused 

# focus the child container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym $mod+Shift+x move container to workspace next
bindsym $mod+Shift+z move container to workspace prev

# Ieload the configuration file
bindsym $mod+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

for_window [class="byobu"] mode byobu

mode "byobu" {
        set $mod Mod4
        bindsym $mod+q mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

		# Resizing precisely
        bindsym Control+h resize shrink width 1 px or 1 ppt
        bindsym Control+j resize grow height 1 px or 1 ppt
        bindsym Control+k resize shrink height 1 px or 1 ppt
        bindsym Control+l resize grow width 1 px or 1 ppt

		# Resizing quickly
        bindsym Shift+h resize shrink width 50 px or 50 ppt
        bindsym Shift+j resize grow height 50 px or 50 ppt
        bindsym Shift+k resize shrink height 50 px or 50 ppt
        bindsym Shift+l resize grow width 50 px or 50 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#bindsym Mod4+r mode "resize"
bindsym $mod+r mode "resize"

# window border configurations
#new_window pixel 2
bindsym $mod+Shift+b border toggle
for_window [class=mpv] border normal

# hide the bar
bindsym $mod+b bar mode toggle

# browser -- Qutebrowser
bindsym $mod+Shift+i exec qutebrowser
#for_window [class=qutebrowser] focus child, border pixel 1, layout stacking, focus
#for_window [class=luakit] focus child, border pixel 1, layout stacking, focus
no_focus [class=qutebrowser]
#focus_on_window_activation none
#no_focus [class=".*"]

### Heres Your Backup browsers -- uncomment at will
# Start Luakit -- CHANGE KEYBINDING
#bindsym $mod+Shift+n exec luakit
for_window [class=luakit] focus child, border pixel 1, layout stacking, focus
#for_window [class=luakit] focus child, border pixel 1, layout stacking, focus
no_focus [class=luakit]

# Start zsurf 
#bindsym $mod+Shift+i exec zsurf
#for_window [class=zsurf] focus child, border pixel 1, layout stacking, focus
#for_window [class=zsurf] focus child, border pixel 1, layout stacking, focus
no_focus [class=zsurf]

# Start wyeb 
#bindsyj $mod+Shift+i exec wyeb
#for_window [class=wyeb] focus child, border pixel 1, layout stacking, focus
#for_window [class=wyeb] focus child, border pixel 1, layout stacking, focus
no_focus [class=wyeb]

# Start vimb 
bindsym $mod+i exec vimb
for_window [class=vimb] focus child, border pixel 1, layout stacking, focus
#for_window [class=vimb] focus child, border pixel 1, layout stacking, focus
no_focus [class="Vimb"]

# Start dwb 
bindsym $mod+Ctrl+i exec dwb
for_window [class=dwb] focus child, border pixel 1, layout stacking, focus
#for_window [class=dwb] focus child, border pixel 1, layout stacking, focus
no_focus [class="dwb"]

# And finally -- in case you join the rest of humanity
bindsym Mod1+Control+o exec google-chrome-unstable
bindsym Mod1+Control+i exec firefox

## Misc Important shit
# Changing volume via f keys
bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -2
bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +2
bindsym XF86AudioMute exec --no-startup-id pulsemixer --toggle-mute

## The syntax for coloration
##
##  <colorclass> <border> <background> <text> <indicator> <child_border>
##
# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
  position top
  mode invisible
  hidden_state show
  tray_padding 0
  modifier none
  status_command i3status -t
  colors {
    separator #666666
    background #333333
    statusline #bbbbbb
    focused_workspace #888888 #dddddd #222222
    active_workspace #333333 #555555 #bbbbbb
    inactive_workspace #333333 #555555 #bbbbbb
    urgent_workspace #2f343a #900000 #ffffff
  }
}

client.focused #888888 #dddddd #222222 #2e9ef4
client.focused_inactive #333333 #555555 #bbbbbb #484e50
client.unfocused #333333 #333333 #888888 #292d2e
client.urgent #2f343a #900000 #ffffff #900000
